{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rupes\\\\Desktop\\\\react-learn\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport './App.css';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nconst MenuItem1 = ({\n  text,\n  selectedKey\n}) => {\n  return React.createElement(\"div\", {\n    className: `menu-item ${selectedKey ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, text);\n};\n\nconst MenuItem2 = ({\n  text,\n  selectedLabel\n}) => {\n  return React.createElement(\"div\", {\n    className: `menu-item ${selectedLabel ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, text);\n};\n\nexport const Menu1 = (list, selectedKey) => list.map(el => {\n  const {\n    prefName,\n    prefCode\n  } = el;\n  return React.createElement(MenuItem1, {\n    text: prefName,\n    key: prefCode,\n    selected: selectedKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n});\nexport const Menu2 = (list, selectedLabel) => list.map(el => {\n  const {\n    label\n  } = el;\n  return React.createElement(MenuItem2, {\n    text: label,\n    key: label,\n    selected: selectedLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n});\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, text);\n};\n\nconst ArrowLeft = Arrow({\n  text: '<',\n  className: 'arrow-prev'\n});\nconst ArrowRight = Arrow({\n  text: '>',\n  className: 'arrow-next'\n}); //const selected = '北海道';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = (key, name) => {\n      fetch('https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=' + key, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-KEY\": \"0TcDvnFjHBuHwOTpnMkYeE4c4KZVTTObEOedJxsg\"\n        }\n      }).then(res => res.json()).then(jdata => {\n        this.setState({\n          prefPop: jdata.result.data,\n          selectedLabel: jdata.result.data[0].label,\n          selectedKey: key,\n          selectedName: name,\n          CData: this.getPerLabelData(jdata.result.data[0].label, jdata.result.data)\n        });\n      });\n    };\n\n    this.getPerLabelData = (key, list) => {\n      return list.filter(el => el.label === key).map(elem => {\n        const {\n          data\n        } = elem;\n        return data;\n      });\n    };\n\n    this.onSelectM2 = key => {\n      this.setState({\n        CData: this.getPerLabelData(key, this.state.prefPop),\n        selectedLabel: key\n      });\n    };\n\n    this.state = {\n      selectedName: '北海道',\n      selectedKey: 1,\n      prefList: [{\n        prefCode: 1,\n        prefName: \"北海道\"\n      }],\n      selectedLabel: '',\n      prefPop: [],\n      CData: []\n    };\n    this.menuItems1 = Menu1(this.state.prefList, this.state.selectedKey);\n    this.menuItems2 = Menu2(this.state.prefPop, this.state.selectedLabel);\n  }\n\n  componentDidMount() {\n    fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-API-KEY\": \"0TcDvnFjHBuHwOTpnMkYeE4c4KZVTTObEOedJxsg\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        prefList: data.result\n      });\n    });\n  }\n  /*\n   */\n\n\n  render() {\n    const {\n      selectedKey,\n      selectedLabel\n    } = this.state; // Create menu from items\n\n    const menu1 = Menu1(this.state.prefList, selectedKey);\n    const menu2 = Menu2(this.state.prefPop, selectedLabel);\n    const tempData = this.state.CData;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"myheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Population Composition Trends of Different Prefectures\"), React.createElement(ScrollMenu, {\n      data: menu1,\n      arrowLeft: ArrowLeft,\n      arrowRight: ArrowRight,\n      selected: selectedKey,\n      onSelect: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(ScrollMenu, {\n      data: menu2,\n      arrowLeft: ArrowLeft,\n      arrowRight: ArrowRight,\n      selected: selectedLabel,\n      onSelect: this.onSelectM2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      height: 400,\n      width: 1000,\n      data: tempData[0],\n      margin: {\n        top: 30,\n        right: 30,\n        left: 30,\n        bottom: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: \"colorUv\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"95%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(XAxis, {\n      dataKey: \"year\",\n      label: {\n        value: 'Year',\n        position: 'bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorUv)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rupes/Desktop/react-learn/src/App.js"],"names":["React","Component","ScrollMenu","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","MenuItem1","text","selectedKey","MenuItem2","selectedLabel","Menu1","list","map","el","prefName","prefCode","Menu2","label","Arrow","className","ArrowLeft","ArrowRight","App","constructor","props","onSelect","key","name","fetch","method","headers","then","res","json","jdata","setState","prefPop","result","data","selectedName","CData","getPerLabelData","filter","elem","onSelectM2","state","prefList","menuItems1","menuItems2","componentDidMount","render","menu1","menu2","tempData","top","right","left","bottom","value","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,WAAP;AAEA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EACiCC,aADjC,EACgDC,OADhD,QAEO,UAFP;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAyB;AACzC,SAAO;AACL,IAAA,SAAS,EAAG,aAAYA,WAAW,GAAG,QAAH,GAAc,EAAG,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEHD,IAFG,CAAP;AAGD,CAJD;;AAMA,MAAME,SAAS,GAAG,CAAC;AAACF,EAAAA,IAAD;AAAOG,EAAAA;AAAP,CAAD,KAA2B;AAC3C,SAAO;AACL,IAAA,SAAS,EAAG,aAAYA,aAAa,GAAG,QAAH,GAAc,EAAG,EADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEHH,IAFG,CAAP;AAGD,CAJD;;AAMA,OAAO,MAAMI,KAAK,GAAG,CAACC,IAAD,EAAOJ,WAAP,KACnBI,IAAI,CAACC,GAAL,CAASC,EAAE,IAAI;AACb,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBF,EAA7B;AAEA,SAAO,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEC,QAAjB;AAA2B,IAAA,GAAG,EAAEC,QAAhC;AAA0C,IAAA,QAAQ,EAAER,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJD,CADK;AAOP,OAAO,MAAMS,KAAK,GAAG,CAACL,IAAD,EAAOF,aAAP,KACnBE,IAAI,CAACC,GAAL,CAASC,EAAE,IAAI;AACb,QAAM;AAACI,IAAAA;AAAD,MAAUJ,EAAhB;AAEA,SAAO,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEI,KAAjB;AAAwB,IAAA,GAAG,EAAEA,KAA7B;AAAoC,IAAA,QAAQ,EAAER,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJD,CADK;;AAOP,MAAMS,KAAK,GAAG,CAAC;AAAEZ,EAAAA,IAAF;AAAQa,EAAAA;AAAR,CAAD,KAAyB;AACnC,SACE;AACE,IAAA,SAAS,EAAEA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEb,IAFF,CADF;AAKD,CANH;;AAQA,MAAMc,SAAS,GAAGF,KAAK,CAAC;AAAEZ,EAAAA,IAAI,EAAE,GAAR;AAAaa,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAvB;AACA,MAAME,UAAU,GAAGH,KAAK,CAAC;AAAEZ,EAAAA,IAAI,EAAE,GAAR;AAAaa,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAxB,C,CAEA;;AAGA,MAAMG,GAAN,SAAkBzB,SAAlB,CAA4B;AAC1B0B,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAelBC,QAfkB,GAeP,CAACC,GAAD,EAAMC,IAAN,KAAe;AACxBC,MAAAA,KAAK,CAAC,wFAAsFF,GAAvF,EAA4F;AAC/FG,QAAAA,MAAM,EAAE,KADuF;AAE/FC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,uBAAa;AAFN;AAFsF,OAA5F,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAM6BF,IAN7B,CAMkCG,KAAK,IAAI;AACzC,aAAKC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,IADV;AAEZ7B,UAAAA,aAAa,EAAEyB,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,CAAlB,EAAqBrB,KAFxB;AAGZV,UAAAA,WAAW,EAAEmB,GAHD;AAIZa,UAAAA,YAAY,EAAEZ,IAJF;AAKZa,UAAAA,KAAK,EAAE,KAAKC,eAAL,CAAqBP,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,CAAlB,EAAqBrB,KAA1C,EAAiDiB,KAAK,CAACG,MAAN,CAAaC,IAA9D;AALK,SAAd;AAOD,OAdD;AAeD,KA/BiB;;AAAA,SAiClBG,eAjCkB,GAiCA,CAACf,GAAD,EAAMf,IAAN,KAAe;AAC/B,aAAOA,IAAI,CAAC+B,MAAL,CAAa7B,EAAD,IAAQA,EAAE,CAACI,KAAH,KAAaS,GAAjC,EAAsCd,GAAtC,CAA2C+B,IAAD,IAAU;AACzD,cAAM;AAACL,UAAAA;AAAD,YAASK,IAAf;AACA,eAAOL,IAAP;AACD,OAHM,CAAP;AAID,KAtCiB;;AAAA,SAwClBM,UAxCkB,GAwCJlB,GAAD,IAAS;AACpB,WAAKS,QAAL,CAAc;AACZK,QAAAA,KAAK,EAAE,KAAKC,eAAL,CAAqBf,GAArB,EAA0B,KAAKmB,KAAL,CAAWT,OAArC,CADK;AAEZ3B,QAAAA,aAAa,EAAEiB;AAFH,OAAd;AAID,KA7CiB;;AAEhB,SAAKmB,KAAL,GAAa;AACXN,MAAAA,YAAY,EAAE,KADH;AAEXhC,MAAAA,WAAW,EAAE,CAFF;AAGXuC,MAAAA,QAAQ,EAAE,CAAC;AAAC/B,QAAAA,QAAQ,EAAE,CAAX;AAAcD,QAAAA,QAAQ,EAAE;AAAxB,OAAD,CAHC;AAIXL,MAAAA,aAAa,EAAE,EAJJ;AAKX2B,MAAAA,OAAO,EAAE,EALE;AAMXI,MAAAA,KAAK,EAAE;AANI,KAAb;AASA,SAAKO,UAAL,GAAkBrC,KAAK,CAAC,KAAKmC,KAAL,CAAWC,QAAZ,EAAsB,KAAKD,KAAL,CAAWtC,WAAjC,CAAvB;AACA,SAAKyC,UAAL,GAAkBhC,KAAK,CAAC,KAAK6B,KAAL,CAAWT,OAAZ,EAAqB,KAAKS,KAAL,CAAWpC,aAAhC,CAAvB;AACD;;AAkCDwC,EAAAA,iBAAiB,GAAE;AACjBrB,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC9DC,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa;AAFN;AAFqD,KAA3D,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAM6BF,IAN7B,CAMkCO,IAAI,IAAI;AACxC,WAAKH,QAAL,CAAc;AACZW,QAAAA,QAAQ,EAAER,IAAI,CAACD;AADH,OAAd;AAGD,KAVD;AAWD;AAED;;;;AAIAa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3C,MAAAA,WAAF;AAAeE,MAAAA;AAAf,QAAiC,KAAKoC,KAA5C,CADO,CAEP;;AACA,UAAMM,KAAK,GAAGzC,KAAK,CAAC,KAAKmC,KAAL,CAAWC,QAAZ,EAAsBvC,WAAtB,CAAnB;AACA,UAAM6C,KAAK,GAAGpC,KAAK,CAAC,KAAK6B,KAAL,CAAWT,OAAZ,EAAqB3B,aAArB,CAAnB;AACA,UAAM4C,QAAQ,GAAG,KAAKR,KAAL,CAAWL,KAA5B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,EAEE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEW,KADR;AAEE,MAAA,SAAS,EAAE/B,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,QAAQ,EAAEd,WAJZ;AAKE,MAAA,QAAQ,EAAE,KAAKkB,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE2B,KADR;AAEE,MAAA,SAAS,EAAEhC,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,QAAQ,EAAEZ,aAJZ;AAKE,MAAA,QAAQ,EAAE,KAAKmC,UALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,GAAnB;AAAwB,MAAA,KAAK,EAAE,IAA/B;AAAqC,MAAA,IAAI,EAAES,QAAQ,CAAC,CAAD,CAAnD;AACM,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,IAAI,EAAE,EAA5B;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAgB,MAAA,EAAE,EAAC,SAAnB;AAA6B,MAAA,EAAE,EAAC,GAAhC;AAAoC,MAAA,EAAE,EAAC,GAAvC;AAA2C,MAAA,EAAE,EAAC,GAA9C;AAAkD,MAAA,EAAE,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,IAAb;AAAkB,MAAA,SAAS,EAAC,SAA5B;AAAsC,MAAA,WAAW,EAAE,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,MAAM,EAAC,KAAb;AAAmB,MAAA,SAAS,EAAC,SAA7B;AAAuC,MAAA,WAAW,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAFF,EAQE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,OAA9B;AAAsC,MAAA,MAAM,EAAC,SAA7C;AAAuD,MAAA,WAAW,EAAE,CAApE;AAAuE,MAAA,IAAI,EAAC,eAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADA,CAjBF,CADF;AAqCD;;AA7GyB;;AAgH5B,eAAerC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport './App.css';\n\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip\n} from 'recharts';\n\nconst MenuItem1 = ({text, selectedKey}) => {\n  return <div\n    className={`menu-item ${selectedKey ? 'active' : ''}`}\n    >{text}</div>;\n};\n\nconst MenuItem2 = ({text, selectedLabel}) => {\n  return <div\n    className={`menu-item ${selectedLabel ? 'active' : ''}`}\n    >{text}</div>;\n};\n\nexport const Menu1 = (list, selectedKey) =>\n  list.map(el => {\n    const {prefName, prefCode} = el;\n \n    return <MenuItem1 text={prefName} key={prefCode} selected={selectedKey} />;\n  });\n\nexport const Menu2 = (list, selectedLabel) =>\n  list.map(el => {\n    const {label} = el;\n \n    return <MenuItem2 text={label} key={label} selected={selectedLabel} />;\n  });\n\nconst Arrow = ({ text, className }) => {\n    return (\n      <div\n        className={className}\n      >{text}</div>\n    );\n  };\n\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\n//const selected = '北海道';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selectedName: '北海道',\n      selectedKey: 1,\n      prefList: [{prefCode: 1, prefName: \"北海道\"}],\n      selectedLabel: '',\n      prefPop: [],\n      CData: []\n    }\n\n    this.menuItems1 = Menu1(this.state.prefList, this.state.selectedKey);\n    this.menuItems2 = Menu2(this.state.prefPop, this.state.selectedLabel);\n  }\n\n  onSelect = (key, name) => {\n    fetch('https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode='+key, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-API-KEY\": \"0TcDvnFjHBuHwOTpnMkYeE4c4KZVTTObEOedJxsg\"\n      }\n    }).then((res) => res.json()).then(jdata => {\n      this.setState({\n        prefPop: jdata.result.data,\n        selectedLabel: jdata.result.data[0].label,\n        selectedKey: key,\n        selectedName: name,\n        CData: this.getPerLabelData(jdata.result.data[0].label, jdata.result.data)\n      });\n    });\n  }\n\n  getPerLabelData = (key, list) => {\n    return list.filter((el) => el.label === key).map((elem) => {\n      const {data} = elem;\n      return data;\n    });\n  }\n\n  onSelectM2 = (key) => {\n    this.setState({\n      CData: this.getPerLabelData(key, this.state.prefPop),\n      selectedLabel: key\n    });\n  }\n\n  componentDidMount(){\n    fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-API-KEY\": \"0TcDvnFjHBuHwOTpnMkYeE4c4KZVTTObEOedJxsg\"\n      }\n    }).then((res) => res.json()).then(data => {\n      this.setState({\n        prefList: data.result\n      });\n    });\n  }\n\n  /*\n\n  */\n\n  render() {\n    const { selectedKey, selectedLabel } = this.state;\n    // Create menu from items\n    const menu1 = Menu1(this.state.prefList, selectedKey);\n    const menu2 = Menu2(this.state.prefPop, selectedLabel);\n    const tempData = this.state.CData;\n    return (\n      <div className=\"App\">\n        <div id='myheader'>Population Composition Trends of Different Prefectures</div>\n        <ScrollMenu\n          data={menu1}\n          arrowLeft={ArrowLeft}\n          arrowRight={ArrowRight}\n          selected={selectedKey}\n          onSelect={this.onSelect}\n        />\n        <ScrollMenu\n          data={menu2}\n          arrowLeft={ArrowLeft}\n          arrowRight={ArrowRight}\n          selected={selectedLabel}\n          onSelect={this.onSelectM2}\n        />\n        \n        <div align=\"center\">\n        <AreaChart height={400} width={1000} data={tempData[0]}\n              margin={{ top: 30, right: 30, left: 30, bottom: 30 }}  >\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"year\" label={{value: 'Year', position: 'bottom'}}>\n          </XAxis>\n          <YAxis/>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\"/>\n    </AreaChart>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}